{
	"info": {
		"_postman_id": "ba694da9-bea4-4765-ba7f-8e98a1972b6e",
		"name": "PETSTORE_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Verify pets By Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/findByStatus?status=available",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						},
						{
							"key": "status",
							"value": "pending",
							"disabled": true
						},
						{
							"key": "status",
							"value": "sold",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Create a new Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify Pet ID, Name and Status\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.be.eql(101);\r",
							"    pm.expect(jsonData.name).to.be.eql(\"Winter\");\r",
							"    pm.expect(jsonData.status).to.be.eql(\"available\");\r",
							"\r",
							"    pm.environment.set(\"Pet_ID\", jsonData.id);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 101,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"Sweetie\"\n  },\n  \"name\": \"Winter\",\n  \"photoUrls\": [\n    \"0\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"SweetieTag\"\n    }\n  ],\n  \"status\": \"available\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify pet is created successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet creation success\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.be.eql(101);\r",
							"    pm.expect(jsonData.name).to.be.eql(\"Winter\");\r",
							"    pm.expect(jsonData.status).to.be.eql(\"available\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/:petID",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petID"
					],
					"variable": [
						{
							"key": "petID",
							"value": "{{Pet_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify uploading an image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "additionalMetadata",
							"value": "Testing",
							"description": "Additional data to pass to server",
							"type": "text"
						},
						{
							"key": "file",
							"description": "file to upload",
							"type": "file",
							"src": "/C:/Users/Admin/Desktop/API_Test.jfif"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/pet/:petId/uploadImage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId",
						"uploadImage"
					],
					"variable": [
						{
							"key": "petId",
							"value": "101",
							"description": "(Required) ID of pet to update"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Update a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet Update Success\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.be.eql(\"Unavailable\");\r",
							"    pm.expect(jsonData.name).to.be.eql(\"Crumbie\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 101,\n    \"category\": {\n        \"id\": 0,\n        \"name\": \"Naxeer\"\n    },\n    \"name\": \"Crumbie\",\n    \"photoUrls\": [\n        \"0\"\n    ],\n    \"tags\": [\n        {\n            \"id\": 0,\n            \"name\": \"CrushieTag\"\n        }\n    ],\n    \"status\": \"Unavailable\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify pet is updated successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet update operation success\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.be.eql(\"Crumbie\");\r",
							"    pm.expect(jsonData.status).to.be.eql(\"Unavailable\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "{{Pet_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Delete a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet Delete operation\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.be.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.be.eql(\"101\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "api_key",
						"value": "reprehenderit minim cillum eu proident"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "{{Pet_ID}}",
							"description": "(Required) Pet id to delete"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify pet is deleted successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", () =>{\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet delete operation success\", () =>{\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.be.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.be.eql(\"Pet not found\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "12345",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "{{Pet_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Pets by tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/findByTags?tags=tag1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByTags"
					],
					"query": [
						{
							"key": "tags",
							"value": "tag1",
							"description": "(Required) Tags to filter by"
						},
						{
							"key": "tags",
							"value": "tag2",
							"description": "(Required) Tags to filter by",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "petID",
			"value": "101",
			"disabled": true
		},
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"disabled": true
		}
	]
}